# This is a sample test plan.
# Every line specifies a command to generate a test case.
# The first column specifies a group name, which is used to give a name for the
# generated test file.
# The second column specifies a command to generate the test case, it could be
# either a `copy` command or a generator with its respective arguments.
# A `copy` command expects a path to a file relatively to the task root.
# A generator could be a source file in Java, C++ or Python, which is compiled
# and executed with the specified arguments.
# Additionally, an argument which is different for every test case, is passed
# at the end. Arguments should be used to generate a uniquely random seed
# inside the generator.
# To generate test cases using test plan use `ocimatic gen-input`


[Subtask 1]

  # Random tests - parameters: N (T=1) K=1 (A=N-1)
  1 ; random_subcase12.py 2 1
  1 ; random_subcase12.py 200 1
  1 ; random_subcase12.py 400 1
  1 ; random_subcase12.py 600 1
  1 ; random_subcase12.py 800 1
  1 ; random_subcase12.py 1000 1

[Subtask 2]

  # Random tests - parameters: N (T=1) K (A=N-1)
  2 ; random_subcase12.py 2 2
  2 ; random_subcase12.py 2 4
  2 ; random_subcase12.py 200 10
  2 ; random_subcase12.py 200 200
  2 ; random_subcase12.py 400 20
  2 ; random_subcase12.py 400 150
  2 ; random_subcase12.py 600 650
  2 ; random_subcase12.py 800 100
  2 ; random_subcase12.py 1000 1000

[Subtask 3]

  # Random tests - parameters: N T=1 K A
  3 ; random_subcase34.py 2 1 2 1
  3 ; random_subcase34.py 2 1 4 1
  3 ; random_subcase34.py 200 1 10 5000
  3 ; random_subcase34.py 200 1 40 1000
  3 ; random_subcase34.py 400 1 20 1000
  3 ; random_subcase34.py 400 1 150 5000
  3 ; random_subcase34.py 600 1 650 8000
  3 ; random_subcase34.py 800 1 100 10000
  3 ; random_subcase34.py 1000 1 1000 10000

  # Connected graph tests - parameters: N T=1 K A
  3 ; connected_subcase34.py 2 1 2 1
  3 ; connected_subcase34.py 2 1 4 1
  3 ; connected_subcase34.py 200 1 10 5000
  3 ; connected_subcase34.py 200 1 40 1000
  3 ; connected_subcase34.py 400 1 20 1000
  3 ; connected_subcase34.py 400 1 150 5000
  3 ; connected_subcase34.py 600 1 650 8000
  3 ; connected_subcase34.py 800 1 100 10000
  3 ; connected_subcase34.py 1000 1 1000 10000

[Subtask 4]

  # Random tests - parameters: N T K A
  4 ; random_subcase34.py 2 1 2 1
  4 ; random_subcase34.py 2 2 4 1
  4 ; random_subcase34.py 200 5 10 5000
  4 ; random_subcase34.py 200 8 40 1000
  4 ; random_subcase34.py 400 10 20 1000
  4 ; random_subcase34.py 400 15 150 5000
  4 ; random_subcase34.py 600 20 650 100
  4 ; random_subcase34.py 800 100 100 800
  4 ; random_subcase34.py 1000 50 1000 10000

  # Connected graph tests - parameters: N T K A
  4 ; connected_subcase34.py 2 1 2 1
  4 ; connected_subcase34.py 2 1 4 1
  4 ; connected_subcase34.py 200 1 10 5000
  4 ; connected_subcase34.py 200 1 40 1000
  4 ; connected_subcase34.py 400 18 20 1000
  4 ; connected_subcase34.py 400 100 150 5000
  4 ; connected_subcase34.py 600 10 650 2000
  4 ; connected_subcase34.py 800 100 100 10000
  4 ; connected_subcase34.py 1000 15 1000 100
  4 ; connected_subcase34.py 1000 15 1000 1
  4 ; connected_subcase34.py 1000 1000 1 1
  
  
