# This is a sample test plan.
# Every line specifies a command to generate a test case.
# The first column specifies a group name, which is used to give a name for the
# generated test file.
# The second column specifies a command to generate the test case, it could be
# either a `copy` command or a generator with its respective arguments.
# A `copy` command expects a path to a file relatively to the task root.
# A generator could be a source file in Java, C++ or Python, which is compiled
# and executed with the specified arguments.
# Additionally, an argument which is different for every test case, is passed
# at the end. Arguments should be used to generate a uniquely random seed
# inside the generator.
# To generate test cases using test plan use `ocimatic gen-input`


[Subtask 1]

  # Random tests parameters: N E K=1 T=1
  1 ; random_subcase134.py 1000 10000 1 1
  1 ; random_subcase134.py 2 1 1 1
  1 ; random_subcase134.py 100 4950 1 1
  1 ; random_subcase134.py 100 500 1 1
  1 ; random_subcase134.py 800 500 1 1

  # Connected graph tests N E K=1 T=1
  1 ; connected_subcase134.py 1000 2000 1 1
  1 ; connected_subcase134.py 500 1000 1 1
  1 ; connected_subcase134.py 250 800 1 1
  1 ; connected_subcase134.py 15 30 1 1
  1 ; connected_subcase134.py 500 10000 1 1


[Subtask 2]

  # Random tests parameters: N K (E=N T=1)
  1 ; random_subcase2.py 1000 1
  1 ; random_subcase2.py 1000 1000
  1 ; random_subcase2.py 1000 50
  1 ; random_subcase2.py 2 1
  1 ; random_subcase2.py 2 50

[Subtask 3]

  # Random tests N E K T=1
  1 ; random_subcase134.py
  1 ; random_subcase134.py
  1 ; random_subcase134.py
  1 ; random_subcase134.py
  1 ; random_subcase134.py

  # Connected graph tests N E K T=1
  1 ; connected_subcase134.py
  1 ; connected_subcase134.py
  1 ; connected_subcase134.py
  1 ; connected_subcase134.py
  1 ; connected_subcase134.py

  [Subtask 4]

  # Random tests N E K T
  1 ; random_subcase134.py
  1 ; random_subcase134.py
  1 ; random_subcase134.py
  1 ; random_subcase134.py
  1 ; random_subcase134.py

  # Connected graph tests N E K T
  1 ; connected_subcase134.py
  1 ; connected_subcase134.py
  1 ; connected_subcase134.py
  1 ; connected_subcase134.py
  1 ; connected_subcase134.py
