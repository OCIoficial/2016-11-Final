# This is a sample test plan.
# Every line specifies a command to generate a test case.
# The first column specifies a group name, which is used to give a name for the
# generated test file.
# The second column specifies a command to generate the test case, it could be
# either a `copy` command or a generator with its respective arguments.
# A `copy` command expects a path to a file relatively to the task root.
# A generator could be a source file in Java, C++ or Python, which is compiled
# and executed with the specified arguments.
# Additionally, an argument which is different for every test case, is passed
# at the end. Arguments should be used to generate a uniquely random seed
# inside the generator.
# To generate test cases using test plan use `ocimatic gen-input`


# [Subtask 1]
  # Random tests - parameters: N (T=1) K=1 (A=N-1)
#  1 ; chain.py 2 1
#  1 ; chain.py 200 1
#  1 ; chain.py 400 1
#  1 ; chain.py 600 1
#  1 ; chain.py 800 1
#  1 ; chain.py 1000 1

[Subtask 1]

  # Random graph - parameters: N T=1 K A
  1 ; gen-random.py 1000 1 1 5000
  1 ; gen-random.py 1000 1 1 2000

  # Connected graph - parameters: N T=1 K=1 A
  2 ; connected.py 10 1 1 20
  2 ; connected.py 100 1 1 200
  2 ; connected.py 1000 1 1 10000
  2 ; connected.py 1000 1 1 1000

[Subtask 2]

  # Chain - parameters: N (T=1) K (A=N-1)
  2 ; chain.py 2 2
  2 ; chain.py 2 4
  2 ; chain.py 200 10
  2 ; chain.py 200 200
  2 ; chain.py 400 20
  2 ; chain.py 400 150
  2 ; chain.py 1000 100
  2 ; chain.py 1000 1000

[Subtask 3]

  # Random tests - parameters: N T=1 K A
  1 ; gen-random.py 200 1 10 5000
  1 ; gen-random.py 200 1 40 1000
  1 ; gen-random.py 400 1 20 1000
  1 ; gen-random.py 400 1 150 5000
  1 ; gen-random.py 600 1 650 8000
  1 ; gen-random.py 800 1 100 10000
  1 ; gen-random.py 1000 1 1000 10000

  # Connected graph tests - parameters: N T=1 K A
  2 ; connected.py 2 1 2 1
  2 ; connected.py 2 1 4 1
  2 ; connected.py 200 1 10 5000
  2 ; connected.py 200 1 40 1000
  2 ; connected.py 400 1 20 1000
  2 ; connected.py 400 1 150 5000
  2 ; connected.py 600 1 650 8000
  2 ; connected.py 800 1 100 10000
  2 ; connected.py 1000 1 1000 10000

[Subtask 4]

  # Random tests - parameters: N T K A
  1 ; gen-random.py 200 5 10 5000
  1 ; gen-random.py 200 8 40 1000
  1 ; gen-random.py 400 10 20 1000
  1 ; gen-random.py 400 15 150 5000
  1 ; gen-random.py 600 20 650 100
  1 ; gen-random.py 800 100 100 800
  1 ; gen-random.py 1000 50 1000 10000

  # Connected graph tests - parameters: N T K A
  2 ; connected.py 2 1 2 1
  2 ; connected.py 2 1 4 1
  2 ; connected.py 200 1 10 5000
  2 ; connected.py 200 1 40 1000
  2 ; connected.py 400 18 20 1000
  2 ; connected.py 400 100 150 5000
  2 ; connected.py 600 10 650 2000
  2 ; connected.py 800 100 100 10000
  2 ; connected.py 1000 15 1000 100
  2 ; connected.py 1000 15 1000 1
  2 ; connected.py 1000 1000 1 1
